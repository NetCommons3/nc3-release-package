#
#-----------------------------------------
# Environment variable
#-----------------------------------------
#

CURDIR=`pwd`; export CURDIR
#CURDIR=$(cd $(dirname $0); pwd)

if [ ! "${NC3VERSION}" = "" ]; then
    NC3VERSION="3.3.6"; export NC3VERSION
fi
if [ ! "${OLDVERSION}" = "" ]; then
    OLDVERSION="3.3.5"; export OLDVERSION
fi
if [ ! "${OLDVER_CABINET_KEY}" = "" ]; then
    OLDVER_CABINET_KEY="9606f4ea3da30d888018d5cd2ea68fce" ; export OLDVER_CABINET_KEY
fi
if [ ! "${DOCKERVERSION}" = "" ]; then
    DOCKERVERSION="1.2"; export DOCKERVERSION
fi
if [ ! "${PATCHNUM}" = "" ]; then
    PATCHNUM="20230225"; export PATCHNUM
fi
PATCHVERSION="$NC3VERSION.$PATCHNUM"; export PATCHVERSION

if [ ! "${GITID}" = "" ]; then
    GITID="(Github ID)"; export GITID
fi
if [ ! "${GITPW}" = "" ]; then
    GITPW="(Github PW)"; export GITPW
fi

GITAUTH="${GITID}:${GITPW}"
COMPOSER_TOKEN=${GITPW}; export COMPOSER_TOKEN

CMDCMPOSER="`which composer`"; export CMDCMPOSER
if [ "${CMDCMPOSER}" = "" ]; then
	CMDCMPOSER="php composer.phar"; export CMDCMPOSER
fi
ZIPCMD="`which zip`"; export ZIPCMD

PROJECTNAME=NetCommons3

GITZIPFILE=NetCommons3-$NC3VERSION; export GITZIPFILE
ZIPDIRNAME=NetCommons3; export ZIPDIRNAME
ZIPFILE=NetCommons-$NC3VERSION; export ZIPFILE
DBNAME=nc${NC3VERSION//./_}; export DBNAME
PKGNAME=nc${NC3VERSION//./-}; export PKGNAME
OLDPKGNAME=nc${OLDVERSION//./-}; export OLDPKGNAME

if [ "${CHKBASEDIR}" = "" ]; then
    CHKBASEDIR="/var/www/NetCommons3/release_check"
fi
CHKDIR=$CHKBASEDIR/$PKGNAME; export CHKDIR

DBHOST=localhost; export DBHOST
DBUSER=root; export DBUSER
DBPASS=root; export DBPASS

GITURL=https://github.com/NetCommons3; export GITURL
GITAUTHURL=https://$GITAUTH@github.com/NetCommons3; export GITURL

PKGDIR=${CURDIR}/package/$PKGNAME; export PKGDIR
WORKDIR=${CURDIR}/work/$PKGNAME; export WORKDIR
MASTERDIR=${CURDIR}/$PROJECTNAME; export MASTERDIR
LOGFILE=${CURDIR}/logs/start$NC3VERSION.log; export LOGFILE
DOCKERDIR=${CURDIR}/nc3app-docker; export DOCKERDIR

execute() {
	echo "[releases shell]$ $1"
	if [ "$2" = "" ]; then
		$1
		echo ""
	fi
}

waiting() {
	echo ""
	echo -n "waiting"
	for ((i=0; i<${1}; i++)); do
		sleep ${2}
		echo -n "."
	done
	echo ""
	echo ""
}
